# UI Agent - Task 3: Configure Tailwind CSS and Design System

## Task ID: 3-UI
## Dependencies: 2-UI
## Priority: Critical
## Order: 2

## Description
Set up Tailwind CSS v3.4+ with custom theme configuration, design tokens, and animation utilities for the Figma prototype.

## Subtasks

### 3.1 Configure Tailwind Theme
Update tailwind.config.ts:
- [ ] Define custom color palette (primary, neutral, semantic colors)
- [ ] Set up typography scale (xs through 5xl)
- [ ] Configure spacing system (base unit: 4px)
- [ ] Define responsive breakpoints (sm, md, lg, xl, 2xl)
- [ ] Add custom animation utilities

### 3.2 Create Design Tokens
Create lib/design-tokens.ts:
```typescript
export const colors = {
  primary: {
    50: '#f0f9ff',
    500: '#3b82f6',
    900: '#1e3a8a'
  },
  // ... rest of palette
}
```
- [ ] Color tokens defined
- [ ] Spacing tokens created
- [ ] Typography tokens added
- [ ] Animation duration tokens defined

### 3.3 Global CSS Setup
Update app/globals.css:
- [ ] Import Tailwind directives
- [ ] Define CSS custom properties for design tokens
- [ ] Add custom @theme animations
- [ ] Configure font imports
- [ ] Add utility classes for common patterns

### 3.4 Animation Utilities
Create custom Tailwind animations:
- [ ] Pulse animation
- [ ] Wiggle animation
- [ ] Slide animations (up, down, left, right)
- [ ] Fade animations
- [ ] Spring-based animations

### 3.5 Create Utility Functions
Create lib/utils/cn.ts:
```typescript
import { clsx, type ClassValue } from 'clsx'
import { twMerge } from 'tailwind-merge'

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
```
- [ ] cn utility function created
- [ ] Type definitions added

## Validation Steps
1. [ ] Tailwind IntelliSense works in IDE
2. [ ] Custom colors appear in autocomplete
3. [ ] Animations work when applied to elements
4. [ ] Design tokens are accessible throughout app

## Git Commit
After completing all tasks:
```bash
npm run dev
# Test that styles apply correctly
git add .
git commit -m "feat: configure Tailwind CSS with custom theme, design tokens, and animation utilities"
```

## Notes
- Mobile-first responsive design approach
- Use CSS custom properties for dynamic theming capability
- Ensure animations respect prefers-reduced-motion
- Follow Tailwind CSS best practices for performance